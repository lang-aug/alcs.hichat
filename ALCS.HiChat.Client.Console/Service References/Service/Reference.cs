//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ALCS.HiChat.Client.Console.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IHiChatService", CallbackContract=typeof(ALCS.HiChat.Client.Console.Service.IHiChatServiceCallback))]
    public interface IHiChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHiChatService/Connect", ReplyAction="http://tempuri.org/IHiChatService/ConnectResponse")]
        bool Connect(ALCS.HiChat.Cross.Models.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHiChatService/Connect", ReplyAction="http://tempuri.org/IHiChatService/ConnectResponse")]
        System.Threading.Tasks.Task<bool> ConnectAsync(ALCS.HiChat.Cross.Models.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHiChatService/Disconnect")]
        void Disconnect(ALCS.HiChat.Cross.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHiChatService/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(ALCS.HiChat.Cross.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHiChatService/PublishMessage")]
        void PublishMessage(ALCS.HiChat.Cross.Models.Message message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHiChatService/PublishMessage")]
        System.Threading.Tasks.Task PublishMessageAsync(ALCS.HiChat.Cross.Models.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHiChatServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHiChatService/RouteMessage")]
        void RouteMessage(ALCS.HiChat.Cross.Models.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHiChatServiceChannel : ALCS.HiChat.Client.Console.Service.IHiChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HiChatServiceClient : System.ServiceModel.DuplexClientBase<ALCS.HiChat.Client.Console.Service.IHiChatService>, ALCS.HiChat.Client.Console.Service.IHiChatService {
        
        public HiChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public HiChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public HiChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public HiChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public HiChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Connect(ALCS.HiChat.Cross.Models.User newUser) {
            return base.Channel.Connect(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectAsync(ALCS.HiChat.Cross.Models.User newUser) {
            return base.Channel.ConnectAsync(newUser);
        }
        
        public void Disconnect(ALCS.HiChat.Cross.Models.User user) {
            base.Channel.Disconnect(user);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(ALCS.HiChat.Cross.Models.User user) {
            return base.Channel.DisconnectAsync(user);
        }
        
        public void PublishMessage(ALCS.HiChat.Cross.Models.Message message) {
            base.Channel.PublishMessage(message);
        }
        
        public System.Threading.Tasks.Task PublishMessageAsync(ALCS.HiChat.Cross.Models.Message message) {
            return base.Channel.PublishMessageAsync(message);
        }
    }
}
